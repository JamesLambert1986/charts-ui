/*

Update all of the html files on the root of the project so that the head and header can be updated easiliy.
We can also control the cache number added to the url of each CSS and JS file to bust the cache when needed

*/

var fs = require('fs')
var path = require('path')

const filenames = fs.readdirSync('./', function(err, filenames) { return filenames; });
const filteredFiles = filenames.filter(item => item.endsWith(".html"));

const headHTML = fs.readFileSync('./_app/partials/head.html');
const headerHTML = fs.readFileSync('./_app/partials/header.html');
const moreHTML = fs.readFileSync('./_app/partials/more-examples.html');

const cacheNum = Date.now();

filteredFiles.forEach(function(filename) {


  fs.readFile(`./${filename}`, 'utf8', function (err,data) {
    if (err) {
      return console.log(err);
    }

    // Update the head
    var result = data.replace(/<!-- #region:HEAD -->(.|\n)*?<!-- #endregion:HEAD -->/gm, `<!-- #region:HEAD -->
${headHTML}
    <!-- #endregion:HEAD -->`);

    // Update the header
    var result = result.replace(/<!-- #region:HEADER -->(.|\n)*?<!-- #endregion:HEADER -->/gm, `<!-- #region:HEADER -->
${headerHTML}
    <!-- #endregion:HEADER -->`);

    // Update more examples
    var result = result.replace(/<!-- #region:MORE -->(.|\n)*?<!-- #endregion:MORE -->/gm, `<!-- #region:MORE -->
${moreHTML}
    <!-- #endregion:MORE -->`);

    // Update cache number
    result = result.replace(/\?cache=(\d+)/gm, `?cache=${cacheNum}`);

    fs.writeFile(`./${filename}`, result, 'utf8', function (err) {
      if (err) return console.log(err);

      console.log(`${filename} updated`);
    });
  });
});
